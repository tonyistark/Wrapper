{"version":3,"file":"optimizely.json_schema_validator.min.js","sources":["../lib/utils/fns/index.ts","../lib/utils/enums/index.ts","../lib/core/project_config/project_config_schema.ts","../lib/utils/json_schema_validator/index.ts"],"sourcesContent":["/**\n * Copyright 2017, 2019-2020, 2022-2023, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { v4 } from 'uuid';\n\nconst MAX_SAFE_INTEGER_LIMIT = Math.pow(2, 53);\n\n// eslint-disable-next-line\nexport function assign(target: any, ...sources: any[]): any {\n  if (!target) {\n    return {};\n  }\n  if (typeof Object.assign === 'function') {\n    return Object.assign(target, ...sources);\n  } else {\n    const to = Object(target);\n    for (let index = 0; index < sources.length; index++) {\n      const nextSource = sources[index];\n      if (nextSource !== null && nextSource !== undefined) {\n        for (const nextKey in nextSource) {\n          // Avoid bugs when hasOwnProperty is shadowed\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n    return to;\n  }\n}\n\nfunction currentTimestamp(): number {\n  return Math.round(new Date().getTime());\n}\n\nfunction isSafeInteger(number: unknown): boolean {\n  return typeof number == 'number' && Math.abs(number) <= MAX_SAFE_INTEGER_LIMIT;\n}\n\nexport function keyBy<K>(arr: K[], key: string): { [key: string]: K } {\n  if (!arr) return {};\n  return keyByUtil(arr, function(item) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (item as any)[key];\n  });\n}\n\nfunction isNumber(value: unknown): boolean {\n  return typeof value === 'number';\n}\n\nexport function uuid(): string {\n  return v4();\n}\n\nexport type Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\n\nexport function getTimestamp(): number {\n  return new Date().getTime();\n}\n\n/**\n * Validates a value is a valid TypeScript enum\n *\n * @export\n * @param {object} enumToCheck\n * @param {*} value\n * @returns {boolean}\n */\n// TODO[OASIS-6649]: Don't use any type\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nexport function isValidEnum(enumToCheck: { [key: string]: any }, value: number | string): boolean {\n  let found = false;\n\n  const keys = Object.keys(enumToCheck);\n  for (let index = 0; index < keys.length; index++) {\n    if (value === enumToCheck[keys[index]]) {\n      found = true;\n      break;\n    }\n  }\n  return found;\n}\n\nexport function groupBy<K>(arr: K[], grouperFn: (item: K) => string): Array<K[]> {\n  const grouper: { [key: string]: K[] } = {};\n\n  arr.forEach(item => {\n    const key = grouperFn(item);\n    grouper[key] = grouper[key] || [];\n    grouper[key].push(item);\n  });\n\n  return objectValues(grouper);\n}\n\nexport function objectValues<K>(obj: { [key: string]: K }): K[] {\n  return Object.keys(obj).map(key => obj[key]);\n}\n\nexport function objectEntries<K>(obj: { [key: string]: K }): [string, K][] {\n  return Object.keys(obj).map(key => [key, obj[key]]);\n}\n\nexport function find<K>(arr: K[], cond: (arg: K) => boolean): K | undefined {\n  let found;\n\n  for (const item of arr) {\n    if (cond(item)) {\n      found = item;\n      break;\n    }\n  }\n\n  return found;\n}\n\nexport function keyByUtil<K>(arr: K[], keyByFn: (item: K) => string): { [key: string]: K } {\n  const map: { [key: string]: K } = {};\n  arr.forEach(item => {\n    const key = keyByFn(item);\n    map[key] = item;\n  });\n  return map;\n}\n\n// TODO[OASIS-6649]: Don't use any type\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nexport function sprintf(format: string, ...args: any[]): string {\n  let i = 0;\n  return format.replace(/%s/g, function() {\n    const arg = args[i++];\n    const type = typeof arg;\n    if (type === 'function') {\n      return arg();\n    } else if (type === 'string') {\n      return arg;\n    } else {\n      return String(arg);\n    }\n  });\n}\n\n/**\n * Checks two string arrays for equality.\n * @param arrayA First Array to be compared against.\n * @param arrayB Second Array to be compared against.\n * @returns {boolean} True if both arrays are equal, otherwise returns false.\n */\nexport function checkArrayEquality(arrayA: string[], arrayB: string[]): boolean {\n  return arrayA.length === arrayB.length && arrayA.every((item, index) => item === arrayB[index]);\n}\n\nexport default {\n  assign,\n  checkArrayEquality,\n  currentTimestamp,\n  isSafeInteger,\n  keyBy,\n  uuid,\n  isNumber,\n  getTimestamp,\n  isValidEnum,\n  groupBy,\n  objectValues,\n  objectEntries,\n  find,\n  keyByUtil,\n  sprintf,\n};\n","/****************************************************************************\n * Copyright 2016-2024 Optimizely, Inc. and contributors                   *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    https://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\n\n/**\n * Contains global enums used throughout the library\n */\nexport const LOG_LEVEL = {\n  NOTSET: 0,\n  DEBUG: 1,\n  INFO: 2,\n  WARNING: 3,\n  ERROR: 4,\n};\n\nexport const ERROR_MESSAGES = {\n  BROWSER_ODP_MANAGER_INITIALIZATION_FAILED: '%s: Error initializing Browser ODP Manager.',\n  CONDITION_EVALUATOR_ERROR: '%s: Error evaluating audience condition of type %s: %s',\n  DATAFILE_AND_SDK_KEY_MISSING: '%s: You must provide at least one of sdkKey or datafile. Cannot start Optimizely',\n  EXPERIMENT_KEY_NOT_IN_DATAFILE: '%s: Experiment key %s is not in datafile.',\n  FEATURE_NOT_IN_DATAFILE: '%s: Feature key %s is not in datafile.',\n  FETCH_SEGMENTS_FAILED_NETWORK_ERROR: '%s: Audience segments fetch failed. (network error)',\n  FETCH_SEGMENTS_FAILED_DECODE_ERROR: '%s: Audience segments fetch failed. (decode error)',\n  IMPROPERLY_FORMATTED_EXPERIMENT: '%s: Experiment key %s is improperly formatted.',\n  INVALID_ATTRIBUTES: '%s: Provided attributes are in an invalid format.',\n  INVALID_BUCKETING_ID: '%s: Unable to generate hash for bucketing ID %s: %s',\n  INVALID_DATAFILE: '%s: Datafile is invalid - property %s: %s',\n  INVALID_DATAFILE_MALFORMED: '%s: Datafile is invalid because it is malformed.',\n  INVALID_CONFIG: '%s: Provided Optimizely config is in an invalid format.',\n  INVALID_JSON: '%s: JSON object is not valid.',\n  INVALID_ERROR_HANDLER: '%s: Provided \"errorHandler\" is in an invalid format.',\n  INVALID_EVENT_DISPATCHER: '%s: Provided \"eventDispatcher\" is in an invalid format.',\n  INVALID_EVENT_TAGS: '%s: Provided event tags are in an invalid format.',\n  INVALID_EXPERIMENT_KEY: '%s: Experiment key %s is not in datafile. It is either invalid, paused, or archived.',\n  INVALID_EXPERIMENT_ID: '%s: Experiment ID %s is not in datafile.',\n  INVALID_GROUP_ID: '%s: Group ID %s is not in datafile.',\n  INVALID_LOGGER: '%s: Provided \"logger\" is in an invalid format.',\n  INVALID_ROLLOUT_ID: '%s: Invalid rollout ID %s attached to feature %s',\n  INVALID_USER_ID: '%s: Provided user ID is in an invalid format.',\n  INVALID_USER_PROFILE_SERVICE: '%s: Provided user profile service instance is in an invalid format: %s.',\n  LOCAL_STORAGE_DOES_NOT_EXIST: 'Error accessing window localStorage.',\n  MISSING_INTEGRATION_KEY: '%s: Integration key missing from datafile. All integrations should include a key.',\n  NO_DATAFILE_SPECIFIED: '%s: No datafile specified. Cannot start optimizely.',\n  NO_JSON_PROVIDED: '%s: No JSON object to validate against schema.',\n  NO_VARIATION_FOR_EXPERIMENT_KEY: '%s: No variation key %s defined in datafile for experiment %s.',\n  ODP_CONFIG_NOT_AVAILABLE: '%s: ODP is not integrated to the project.',\n  ODP_EVENT_FAILED: 'ODP event send failed.',\n  ODP_FETCH_QUALIFIED_SEGMENTS_SEGMENTS_MANAGER_MISSING:\n    '%s: ODP unable to fetch qualified segments (Segments Manager not initialized).',\n  ODP_IDENTIFY_FAILED_EVENT_MANAGER_MISSING:\n    '%s: ODP identify event %s is not dispatched (Event Manager not instantiated).',\n  ODP_INITIALIZATION_FAILED: '%s: ODP failed to initialize.',\n  ODP_INVALID_DATA: '%s: ODP data is not valid',\n  ODP_EVENT_FAILED_ODP_MANAGER_MISSING: '%s: ODP Event failed to send. (ODP Manager not initialized).',\n  ODP_FETCH_QUALIFIED_SEGMENTS_FAILED_ODP_MANAGER_MISSING:\n    '%s: ODP failed to Fetch Qualified Segments. (ODP Manager not initialized).',\n  ODP_IDENTIFY_USER_FAILED_ODP_MANAGER_MISSING: '%s: ODP failed to Identify User. (ODP Manager not initialized).',\n  ODP_IDENTIFY_USER_FAILED_USER_CONTEXT_INITIALIZATION:\n    '%s: ODP failed to Identify User. (Failed during User Context Initialization).',\n  ODP_MANAGER_UPDATE_SETTINGS_FAILED_EVENT_MANAGER_MISSING:\n    '%s: ODP Manager failed to update OdpConfig settings for internal event manager. (Event Manager not initialized).',\n  ODP_MANAGER_UPDATE_SETTINGS_FAILED_SEGMENTS_MANAGER_MISSING:\n    '%s: ODP Manager failed to update OdpConfig settings for internal segments manager. (Segments Manager not initialized).',\n  ODP_NOT_ENABLED: 'ODP is not enabled',\n  ODP_NOT_INTEGRATED: '%s: ODP is not integrated',\n  ODP_SEND_EVENT_FAILED_EVENT_MANAGER_MISSING:\n    '%s: ODP send event %s was not dispatched (Event Manager not instantiated).',\n  ODP_SEND_EVENT_FAILED_UID_MISSING: '%s: ODP send event %s was not dispatched (No valid user identifier provided).',\n  ODP_SEND_EVENT_FAILED_VUID_MISSING: '%s: ODP send event %s was not dispatched (Unable to fetch VUID).',\n  ODP_VUID_INITIALIZATION_FAILED: '%s: ODP VUID initialization failed.',\n  ODP_VUID_REGISTRATION_FAILED: '%s: ODP VUID failed to be registered.',\n  ODP_VUID_REGISTRATION_FAILED_EVENT_MANAGER_MISSING: '%s: ODP register vuid failed. (Event Manager not instantiated).',\n  UNDEFINED_ATTRIBUTE: '%s: Provided attribute: %s has an undefined value.',\n  UNRECOGNIZED_ATTRIBUTE: '%s: Unrecognized attribute %s provided. Pruning before sending event to Optimizely.',\n  UNABLE_TO_CAST_VALUE: '%s: Unable to cast value %s to type %s, returning null.',\n  USER_NOT_IN_FORCED_VARIATION: '%s: User %s is not in the forced variation map. Cannot remove their forced variation.',\n  USER_PROFILE_LOOKUP_ERROR: '%s: Error while looking up user profile for user ID \"%s\": %s.',\n  USER_PROFILE_SAVE_ERROR: '%s: Error while saving user profile for user ID \"%s\": %s.',\n  VARIABLE_KEY_NOT_IN_DATAFILE: '%s: Variable with key \"%s\" associated with feature with key \"%s\" is not in datafile.',\n  VARIATION_ID_NOT_IN_DATAFILE: '%s: No variation ID %s defined in datafile for experiment %s.',\n  VARIATION_ID_NOT_IN_DATAFILE_NO_EXPERIMENT: '%s: Variation ID %s is not in the datafile.',\n  INVALID_INPUT_FORMAT: '%s: Provided %s is in an invalid format.',\n  INVALID_DATAFILE_VERSION: '%s: This version of the JavaScript SDK does not support the given datafile version: %s',\n  INVALID_VARIATION_KEY: '%s: Provided variation key is in an invalid format.',\n};\n\nexport const LOG_MESSAGES = {\n  ACTIVATE_USER: '%s: Activating user %s in experiment %s.',\n  DISPATCH_CONVERSION_EVENT: '%s: Dispatching conversion event to URL %s with params %s.',\n  DISPATCH_IMPRESSION_EVENT: '%s: Dispatching impression event to URL %s with params %s.',\n  DEPRECATED_EVENT_VALUE: '%s: Event value is deprecated in %s call.',\n  EVENT_KEY_NOT_FOUND: '%s: Event key %s is not in datafile.',\n  EXPERIMENT_NOT_RUNNING: '%s: Experiment %s is not running.',\n  FEATURE_ENABLED_FOR_USER: '%s: Feature %s is enabled for user %s.',\n  FEATURE_NOT_ENABLED_FOR_USER: '%s: Feature %s is not enabled for user %s.',\n  FEATURE_HAS_NO_EXPERIMENTS: '%s: Feature %s is not attached to any experiments.',\n  FAILED_TO_PARSE_VALUE: '%s: Failed to parse event value \"%s\" from event tags.',\n  FAILED_TO_PARSE_REVENUE: '%s: Failed to parse revenue value \"%s\" from event tags.',\n  FORCED_BUCKETING_FAILED: '%s: Variation key %s is not in datafile. Not activating user %s.',\n  INVALID_OBJECT: '%s: Optimizely object is not valid. Failing %s.',\n  INVALID_CLIENT_ENGINE: '%s: Invalid client engine passed: %s. Defaulting to node-sdk.',\n  INVALID_DEFAULT_DECIDE_OPTIONS: '%s: Provided default decide options is not an array.',\n  INVALID_DECIDE_OPTIONS: '%s: Provided decide options is not an array. Using default decide options.',\n  INVALID_VARIATION_ID: '%s: Bucketed into an invalid variation ID. Returning null.',\n  NOTIFICATION_LISTENER_EXCEPTION: '%s: Notification listener for (%s) threw exception: %s',\n  NO_ROLLOUT_EXISTS: '%s: There is no rollout of feature %s.',\n  NOT_ACTIVATING_USER: '%s: Not activating user %s for experiment %s.',\n  NOT_TRACKING_USER: '%s: Not tracking user %s.',\n  ODP_DISABLED: 'ODP Disabled.',\n  ODP_IDENTIFY_FAILED_ODP_DISABLED: '%s: ODP identify event for user %s is not dispatched (ODP disabled).',\n  ODP_IDENTIFY_FAILED_ODP_NOT_INTEGRATED: '%s: ODP identify event %s is not dispatched (ODP not integrated).',\n  ODP_SEND_EVENT_IDENTIFIER_CONVERSION_FAILED:\n    '%s: sendOdpEvent failed to parse through and convert fs_user_id aliases',\n  PARSED_REVENUE_VALUE: '%s: Parsed revenue value \"%s\" from event tags.',\n  PARSED_NUMERIC_VALUE: '%s: Parsed event value \"%s\" from event tags.',\n  RETURNING_STORED_VARIATION:\n    '%s: Returning previously activated variation \"%s\" of experiment \"%s\" for user \"%s\" from user profile.',\n  ROLLOUT_HAS_NO_EXPERIMENTS: '%s: Rollout of feature %s has no experiments',\n  SAVED_VARIATION: '%s: Saved variation \"%s\" of experiment \"%s\" for user \"%s\".',\n  SAVED_VARIATION_NOT_FOUND:\n    '%s: User %s was previously bucketed into variation with ID %s for experiment %s, but no matching variation was found.',\n  SHOULD_NOT_DISPATCH_ACTIVATE: '%s: Experiment %s is not in \"Running\" state. Not activating user.',\n  SKIPPING_JSON_VALIDATION: '%s: Skipping JSON schema validation.',\n  TRACK_EVENT: '%s: Tracking event %s for user %s.',\n  UNRECOGNIZED_DECIDE_OPTION: '%s: Unrecognized decide option %s provided.',\n  USER_ASSIGNED_TO_EXPERIMENT_BUCKET: '%s: Assigned bucket %s to user with bucketing ID %s.',\n  USER_BUCKETED_INTO_EXPERIMENT_IN_GROUP: '%s: User %s is in experiment %s of group %s.',\n  USER_BUCKETED_INTO_TARGETING_RULE: '%s: User %s bucketed into targeting rule %s.',\n  USER_IN_FEATURE_EXPERIMENT: '%s: User %s is in variation %s of experiment %s on the feature %s.',\n  USER_IN_ROLLOUT: '%s: User %s is in rollout of feature %s.',\n  USER_NOT_BUCKETED_INTO_EVERYONE_TARGETING_RULE:\n    '%s: User %s not bucketed into everyone targeting rule due to traffic allocation.',\n  USER_NOT_BUCKETED_INTO_EXPERIMENT_IN_GROUP: '%s: User %s is not in experiment %s of group %s.',\n  USER_NOT_BUCKETED_INTO_ANY_EXPERIMENT_IN_GROUP: '%s: User %s is not in any experiment of group %s.',\n  USER_NOT_BUCKETED_INTO_TARGETING_RULE:\n    '%s User %s not bucketed into targeting rule %s due to traffic allocation. Trying everyone rule.',\n  USER_NOT_IN_FEATURE_EXPERIMENT: '%s: User %s is not in any experiment on the feature %s.',\n  USER_NOT_IN_ROLLOUT: '%s: User %s is not in rollout of feature %s.',\n  USER_FORCED_IN_VARIATION: '%s: User %s is forced in variation %s.',\n  USER_MAPPED_TO_FORCED_VARIATION: '%s: Set variation %s for experiment %s and user %s in the forced variation map.',\n  USER_DOESNT_MEET_CONDITIONS_FOR_TARGETING_RULE: '%s: User %s does not meet conditions for targeting rule %s.',\n  USER_MEETS_CONDITIONS_FOR_TARGETING_RULE: '%s: User %s meets conditions for targeting rule %s.',\n  USER_HAS_VARIATION: '%s: User %s is in variation %s of experiment %s.',\n  USER_HAS_FORCED_DECISION_WITH_RULE_SPECIFIED:\n    'Variation (%s) is mapped to flag (%s), rule (%s) and user (%s) in the forced decision map.',\n  USER_HAS_FORCED_DECISION_WITH_NO_RULE_SPECIFIED:\n    'Variation (%s) is mapped to flag (%s) and user (%s) in the forced decision map.',\n  USER_HAS_FORCED_DECISION_WITH_RULE_SPECIFIED_BUT_INVALID:\n    'Invalid variation is mapped to flag (%s), rule (%s) and user (%s) in the forced decision map.',\n  USER_HAS_FORCED_DECISION_WITH_NO_RULE_SPECIFIED_BUT_INVALID:\n    'Invalid variation is mapped to flag (%s) and user (%s) in the forced decision map.',\n  USER_HAS_FORCED_VARIATION: '%s: Variation %s is mapped to experiment %s and user %s in the forced variation map.',\n  USER_HAS_NO_VARIATION: '%s: User %s is in no variation of experiment %s.',\n  USER_HAS_NO_FORCED_VARIATION: '%s: User %s is not in the forced variation map.',\n  USER_HAS_NO_FORCED_VARIATION_FOR_EXPERIMENT: '%s: No experiment %s mapped to user %s in the forced variation map.',\n  USER_NOT_IN_ANY_EXPERIMENT: '%s: User %s is not in any experiment of group %s.',\n  USER_NOT_IN_EXPERIMENT: '%s: User %s does not meet conditions to be in experiment %s.',\n  USER_RECEIVED_DEFAULT_VARIABLE_VALUE:\n    '%s: User \"%s\" is not in any variation or rollout rule. Returning default value for variable \"%s\" of feature flag \"%s\".',\n  FEATURE_NOT_ENABLED_RETURN_DEFAULT_VARIABLE_VALUE:\n    '%s: Feature \"%s\" is not enabled for user %s. Returning the default variable value \"%s\".',\n  VARIABLE_NOT_USED_RETURN_DEFAULT_VARIABLE_VALUE:\n    '%s: Variable \"%s\" is not used in variation \"%s\". Returning default value.',\n  USER_RECEIVED_VARIABLE_VALUE: '%s: Got variable value \"%s\" for variable \"%s\" of feature flag \"%s\"',\n  VALID_DATAFILE: '%s: Datafile is valid.',\n  VALID_USER_PROFILE_SERVICE: '%s: Valid user profile service provided.',\n  VARIATION_REMOVED_FOR_USER: '%s: Variation mapped to experiment %s has been removed for user %s.',\n  VARIABLE_REQUESTED_WITH_WRONG_TYPE:\n    '%s: Requested variable type \"%s\", but variable is of type \"%s\". Use correct API to retrieve value. Returning None.',\n  VALID_BUCKETING_ID: '%s: BucketingId is valid: \"%s\"',\n  BUCKETING_ID_NOT_STRING: '%s: BucketingID attribute is not a string. Defaulted to userId',\n  EVALUATING_AUDIENCE: '%s: Starting to evaluate audience \"%s\" with conditions: %s.',\n  EVALUATING_AUDIENCES_COMBINED: '%s: Evaluating audiences for %s \"%s\": %s.',\n  AUDIENCE_EVALUATION_RESULT: '%s: Audience \"%s\" evaluated to %s.',\n  AUDIENCE_EVALUATION_RESULT_COMBINED: '%s: Audiences for %s %s collectively evaluated to %s.',\n  MISSING_ATTRIBUTE_VALUE:\n    '%s: Audience condition %s evaluated to UNKNOWN because no value was passed for user attribute \"%s\".',\n  UNEXPECTED_CONDITION_VALUE:\n    '%s: Audience condition %s evaluated to UNKNOWN because the condition value is not supported.',\n  UNEXPECTED_TYPE:\n    '%s: Audience condition %s evaluated to UNKNOWN because a value of type \"%s\" was passed for user attribute \"%s\".',\n  UNEXPECTED_TYPE_NULL:\n    '%s: Audience condition %s evaluated to UNKNOWN because a null value was passed for user attribute \"%s\".',\n  UNKNOWN_CONDITION_TYPE:\n    '%s: Audience condition %s has an unknown condition type. You may need to upgrade to a newer release of the Optimizely SDK.',\n  UNKNOWN_MATCH_TYPE:\n    '%s: Audience condition %s uses an unknown match type. You may need to upgrade to a newer release of the Optimizely SDK.',\n  UPDATED_OPTIMIZELY_CONFIG: '%s: Updated Optimizely config to revision %s (project id %s)',\n  OUT_OF_BOUNDS:\n    '%s: Audience condition %s evaluated to UNKNOWN because the number value for user attribute \"%s\" is not in the range [-2^53, +2^53].',\n  UNABLE_TO_ATTACH_UNLOAD: '%s: unable to bind optimizely.close() to page unload event: \"%s\"',\n};\n\nexport const enum RESERVED_EVENT_KEYWORDS {\n  REVENUE = 'revenue',\n  VALUE = 'value',\n}\n\nexport const CONTROL_ATTRIBUTES = {\n  BOT_FILTERING: '$opt_bot_filtering',\n  BUCKETING_ID: '$opt_bucketing_id',\n  STICKY_BUCKETING_KEY: '$opt_experiment_bucket_map',\n  USER_AGENT: '$opt_user_agent',\n  FORCED_DECISION_NULL_RULE_KEY: '$opt_null_rule_key',\n};\n\nexport const JAVASCRIPT_CLIENT_ENGINE = 'javascript-sdk';\nexport const NODE_CLIENT_ENGINE = 'node-sdk';\nexport const REACT_CLIENT_ENGINE = 'react-sdk';\nexport const REACT_NATIVE_CLIENT_ENGINE = 'react-native-sdk';\nexport const REACT_NATIVE_JS_CLIENT_ENGINE = 'react-native-js-sdk';\nexport const CLIENT_VERSION ='5.3.4' \n\nexport const DECISION_NOTIFICATION_TYPES = {\n  AB_TEST: 'ab-test',\n  FEATURE: 'feature',\n  FEATURE_TEST: 'feature-test',\n  FEATURE_VARIABLE: 'feature-variable',\n  ALL_FEATURE_VARIABLES: 'all-feature-variables',\n  FLAG: 'flag',\n};\n\n/*\n * Represents the source of a decision for feature management. When a feature\n * is accessed through isFeatureEnabled or getVariableValue APIs, the decision\n * source is used to decide whether to dispatch an impression event to\n * Optimizely.\n */\nexport const DECISION_SOURCES = {\n  FEATURE_TEST: 'feature-test',\n  ROLLOUT: 'rollout',\n  EXPERIMENT: 'experiment',\n};\n\nexport const AUDIENCE_EVALUATION_TYPES = {\n  RULE: 'rule',\n  EXPERIMENT: 'experiment',\n};\n\n/*\n * Possible types of variables attached to features\n */\nexport const FEATURE_VARIABLE_TYPES = {\n  BOOLEAN: 'boolean',\n  DOUBLE: 'double',\n  INTEGER: 'integer',\n  STRING: 'string',\n  JSON: 'json',\n};\n\n/*\n * Supported datafile versions\n */\nexport const DATAFILE_VERSIONS = {\n  V2: '2',\n  V3: '3',\n  V4: '4',\n};\n\n/*\n * Pre-Release and Build symbols\n */\nexport const enum VERSION_TYPE {\n  PRE_RELEASE_VERSION_DELIMITER = '-',\n  BUILD_VERSION_DELIMITER = '+',\n}\n\nexport const DECISION_MESSAGES = {\n  SDK_NOT_READY: 'Optimizely SDK not configured properly yet.',\n  FLAG_KEY_INVALID: 'No flag was found for key \"%s\".',\n  VARIABLE_VALUE_INVALID: 'Variable value for key \"%s\" is invalid or wrong type.',\n};\n\n/*\n * Notification types for use with NotificationCenter\n * Format is EVENT: <list of parameters to callback>\n *\n * SDK consumers can use these to register callbacks with the notification center.\n *\n *  @deprecated since 3.1.0\n *  ACTIVATE: An impression event will be sent to Optimizely\n *  Callbacks will receive an object argument with the following properties:\n *    - experiment {Object}\n *    - userId {string}\n *    - attributes {Object|undefined}\n *    - variation {Object}\n *    - logEvent {Object}\n *\n *  DECISION: A decision is made in the system. i.e. user activation,\n *  feature access or feature-variable value retrieval\n *  Callbacks will receive an object argument with the following properties:\n *    - type {string}\n *    - userId {string}\n *    - attributes {Object|undefined}\n *    - decisionInfo {Object|undefined}\n *\n *  LOG_EVENT: A batch of events, which could contain impressions and/or conversions,\n *  will be sent to Optimizely\n *  Callbacks will receive an object argument with the following properties:\n *    - url {string}\n *    - httpVerb {string}\n *    - params {Object}\n *\n *  OPTIMIZELY_CONFIG_UPDATE: This Optimizely instance has been updated with a new\n *  config\n *\n *  TRACK: A conversion event will be sent to Optimizely\n *  Callbacks will receive the an object argument with the following properties:\n *    - eventKey {string}\n *    - userId {string}\n *    - attributes {Object|undefined}\n *    - eventTags {Object|undefined}\n *    - logEvent {Object}\n *\n */\nexport enum NOTIFICATION_TYPES {\n  ACTIVATE = 'ACTIVATE:experiment, user_id,attributes, variation, event',\n  DECISION = 'DECISION:type, userId, attributes, decisionInfo',\n  LOG_EVENT = 'LOG_EVENT:logEvent',\n  OPTIMIZELY_CONFIG_UPDATE = 'OPTIMIZELY_CONFIG_UPDATE',\n  TRACK = 'TRACK:event_key, user_id, attributes, event_tags, event',\n}\n\n/**\n * Default milliseconds before request timeout\n */\nexport const REQUEST_TIMEOUT_MS = 60 * 1000; // 1 minute\nexport const REQUEST_TIMEOUT_ODP_SEGMENTS_MS = 10 * 1000; // 10 secs\nexport const REQUEST_TIMEOUT_ODP_EVENTS_MS = 10 * 1000; // 10 secs\n\n/**\n * ODP User Key Options\n */\nexport enum ODP_USER_KEY {\n  VUID = 'vuid',\n  FS_USER_ID = 'fs_user_id',\n}\n\n/**\n * Alias for fs_user_id to catch for and automatically convert to fs_user_id\n */\nexport const FS_USER_ID_ALIAS = 'fs-user-id';\n\nexport const ODP_DEFAULT_EVENT_TYPE = 'fullstack';\n\n/**\n * ODP Event Action Options\n */\nexport enum ODP_EVENT_ACTION {\n  IDENTIFIED = 'identified',\n  INITIALIZED = 'client_initialized',\n}\n","/**\n * Copyright 2016-2017, 2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*eslint-disable */\n/**\n * Project Config JSON Schema file used to validate the project json datafile\n */\nimport { JSONSchema4 } from 'json-schema';\n\nvar schemaDefinition = {\n  $schema: 'http://json-schema.org/draft-04/schema#',\n  title: 'Project Config JSON Schema',\n  type: 'object',\n  properties: {\n    projectId: {\n      type: 'string',\n      required: true,\n    },\n    accountId: {\n      type: 'string',\n      required: true,\n    },\n    groups: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          id: {\n            type: 'string',\n            required: true,\n          },\n          policy: {\n            type: 'string',\n            required: true,\n          },\n          trafficAllocation: {\n            type: 'array',\n            items: {\n              type: 'object',\n              properties: {\n                entityId: {\n                  type: 'string',\n                  required: true,\n                },\n                endOfRange: {\n                  type: 'integer',\n                  required: true,\n                },\n              },\n            },\n            required: true,\n          },\n          experiments: {\n            type: 'array',\n            items: {\n              type: 'object',\n              properties: {\n                id: {\n                  type: 'string',\n                  required: true,\n                },\n                key: {\n                  type: 'string',\n                  required: true,\n                },\n                status: {\n                  type: 'string',\n                  required: true,\n                },\n                layerId: {\n                  type: 'string',\n                  required: true,\n                },\n                variations: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      id: {\n                        type: 'string',\n                        required: true,\n                      },\n                      key: {\n                        type: 'string',\n                        required: true,\n                      },\n                    },\n                  },\n                  required: true,\n                },\n                trafficAllocation: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    properties: {\n                      entityId: {\n                        type: 'string',\n                        required: true,\n                      },\n                      endOfRange: {\n                        type: 'integer',\n                        required: true,\n                      },\n                    },\n                  },\n                  required: true,\n                },\n                audienceIds: {\n                  type: 'array',\n                  items: {\n                    type: 'string',\n                  },\n                  required: true,\n                },\n                forcedVariations: {\n                  type: 'object',\n                  required: true,\n                },\n              },\n            },\n            required: true,\n          },\n        },\n      },\n      required: true,\n    },\n    experiments: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          id: {\n            type: 'string',\n            required: true,\n          },\n          key: {\n            type: 'string',\n            required: true,\n          },\n          status: {\n            type: 'string',\n            required: true,\n          },\n          layerId: {\n            type: 'string',\n            required: true,\n          },\n          variations: {\n            type: 'array',\n            items: {\n              type: 'object',\n              properties: {\n                id: {\n                  type: 'string',\n                  required: true,\n                },\n                key: {\n                  type: 'string',\n                  required: true,\n                },\n              },\n            },\n            required: true,\n          },\n          trafficAllocation: {\n            type: 'array',\n            items: {\n              type: 'object',\n              properties: {\n                entityId: {\n                  type: 'string',\n                  required: true,\n                },\n                endOfRange: {\n                  type: 'integer',\n                  required: true,\n                },\n              },\n            },\n            required: true,\n          },\n          audienceIds: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n            required: true,\n          },\n          forcedVariations: {\n            type: 'object',\n            required: true,\n          },\n        },\n      },\n      required: true,\n    },\n    events: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          key: {\n            type: 'string',\n            required: true,\n          },\n          experimentIds: {\n            type: 'array',\n            items: {\n              type: 'string',\n              required: true,\n            },\n          },\n          id: {\n            type: 'string',\n            required: true,\n          },\n        },\n      },\n      required: true,\n    },\n    audiences: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          id: {\n            type: 'string',\n            required: true,\n          },\n          name: {\n            type: 'string',\n            required: true,\n          },\n          conditions: {\n            type: 'string',\n            required: true,\n          },\n        },\n      },\n      required: true,\n    },\n    attributes: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          id: {\n            type: 'string',\n            required: true,\n          },\n          key: {\n            type: 'string',\n            required: true,\n          },\n        },\n      },\n      required: true,\n    },\n    version: {\n      type: 'string',\n      required: true,\n    },\n    revision: {\n      type: 'string',\n      required: true,\n    },\n    integrations: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          key: {\n            type: 'string',\n            required: true\n          },\n          host: {\n            type: 'string'\n          },\n          publicKey: {\n            type: 'string'\n          },\n          pixelUrl: {\n            type: 'string'\n          },\n        },\n      },\n    },\n  },\n};\n\nconst schema = schemaDefinition as JSONSchema4\n\nexport default schema\n","/**\n * Copyright 2016-2017, 2020, 2022 Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf } from '../fns';\nimport { JSONSchema4, validate as jsonSchemaValidator } from 'json-schema';\n\nimport { ERROR_MESSAGES } from '../enums';\nimport schema from '../../core/project_config/project_config_schema';\n\nconst MODULE_NAME = 'JSON_SCHEMA_VALIDATOR';\n\n/**\n * Validate the given json object against the specified schema\n * @param {unknown} jsonObject The object to validate against the schema\n * @param {JSONSchema4} validationSchema Provided schema to use for validation\n * @param {boolean} shouldThrowOnError Should validation throw if invalid JSON object\n * @return {boolean} true if the given object is valid; throws or false if invalid\n */\nexport function validate(\n  jsonObject: unknown,\n  validationSchema: JSONSchema4 = schema,\n  shouldThrowOnError = true\n): boolean {\n  const moduleTitle = `${MODULE_NAME} (${validationSchema.title})`;\n\n  if (typeof jsonObject !== 'object' || jsonObject === null) {\n    throw new Error(sprintf(ERROR_MESSAGES.NO_JSON_PROVIDED, moduleTitle));\n  }\n\n  const result = jsonSchemaValidator(jsonObject, validationSchema);\n  if (result.valid) {\n    return true;\n  }\n\n  if (!shouldThrowOnError) {\n    return false;\n  }\n\n  if (Array.isArray(result.errors)) {\n    throw new Error(\n      sprintf(ERROR_MESSAGES.INVALID_DATAFILE, moduleTitle, result.errors[0].property, result.errors[0].message)\n    );\n  }\n\n  throw new Error(sprintf(ERROR_MESSAGES.INVALID_JSON, moduleTitle));\n}\n"],"names":["sprintf","format","_i","args","i","replace","arg","type","String","NOTIFICATION_TYPES","ODP_USER_KEY","ODP_EVENT_ACTION","ERROR_MESSAGES","schema","$schema","title","properties","projectId","required","accountId","groups","items","id","policy","trafficAllocation","entityId","endOfRange","experiments","key","status","layerId","variations","audienceIds","forcedVariations","events","experimentIds","audiences","name","conditions","attributes","version","revision","integrations","host","publicKey","pixelUrl","jsonObject","validationSchema","shouldThrowOnError","moduleTitle","Error","result","jsonSchemaValidator","valid","Array","isArray","errors","property","message"],"mappings":"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"}