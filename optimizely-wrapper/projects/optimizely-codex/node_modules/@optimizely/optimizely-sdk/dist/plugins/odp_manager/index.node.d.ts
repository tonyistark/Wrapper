/**
 * Copyright 2023-2024, Optimizely
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { LogHandler } from '../../modules/logging';
import { OdpManager } from '../../core/odp/odp_manager';
import { IOdpEventManager, OdpOptions } from '../../shared_types';
import { IOdpSegmentManager } from '../../core/odp/odp_segment_manager';
import { OdpIntegrationConfig } from '../../core/odp/odp_config';
interface NodeOdpManagerConfig {
    clientEngine?: string;
    clientVersion?: string;
    logger?: LogHandler;
    odpOptions?: OdpOptions;
    odpIntegrationConfig?: OdpIntegrationConfig;
}
/**
 * Server-side Node Plugin for ODP Manager.
 * Note: As this is still a work-in-progress. Please avoid using the Node ODP Manager.
 */
export declare class NodeOdpManager extends OdpManager {
    constructor(options: {
        odpIntegrationConfig?: OdpIntegrationConfig;
        segmentManager: IOdpSegmentManager;
        eventManager: IOdpEventManager;
        logger: LogHandler;
    });
    static createInstance({ logger, odpOptions, odpIntegrationConfig, clientEngine, clientVersion }: NodeOdpManagerConfig): NodeOdpManager;
    isVuidEnabled(): boolean;
    getVuid(): string | undefined;
}
export {};
